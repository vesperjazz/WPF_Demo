<ResourceDictionary x:Class="WPFDemo.LocalResources.ResourceDictionary"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:usercontrols="clr-namespace:WPFDemo.UserControls"
                    xmlns:windows="clr-namespace:WPFDemo.Windows">
    <!-- General separation between controls. -->
    <!-- The following statements are exactly the same. -->
    <!-- XAML has a fixed convention of Left,Top,Right,Bottom. -->
    <!-- DO NOT confuse this with CSS convention, i.e. Top,Right,Bottom,Left. -->
    <Thickness x:Key="TopMarginSeparation">0,5,0,0</Thickness>
    <!--<Thickness x:Key="TopMarginSeparation" Left="0" Top="5" Right="0" Bottom="0"/>-->

    <Style x:Key="HelpToolTipStyle" TargetType="ToolTip" BasedOn="{StaticResource {x:Type ToolTip}}">
        <Setter Property="HasDropShadow" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToolTip">
                    <Border Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <StackPanel Margin="5">
                            <TextBlock FontWeight="Bold" FontSize="14" Margin="0,0,0,5"
                                       Text="{Binding UserControlTitle, RelativeSource={RelativeSource AncestorType=usercontrols:UserControlBase}}" 
                                       TextDecorations="Underline"/>
                            <ListView Background="Transparent" 
                                      BorderThickness="0"
                                      ItemsSource="{Binding UserControlDescriptions, RelativeSource={RelativeSource AncestorType=usercontrols:UserControlBase}}">
                                <ListView.ItemContainerStyle>
                                    <Style TargetType="ListViewItem">
                                        <Setter Property="BorderThickness" Value="0"/>
                                        <Setter Property="Margin" Value="0"/>
                                        <Setter Property="Padding" Value="0"/>
                                    </Style>
                                </ListView.ItemContainerStyle>
                            </ListView>
                        </StackPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Template can be shared across different styles. -->
    <!-- Line 33-60 is exactly the same as Line 62-97. -->
    <!--<ControlTemplate TargetType="usercontrols:UserControlBase" x:Key="UserControlBaseTemplate">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="30"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <StackPanel Grid.Row="0" Orientation="Horizontal">
                <Image Height="20" Width="20" 
                       VerticalAlignment="Center"
                       Source="/WPFDemo.Resources;Component/Images/Help_24.png"
                       ToolTipService.ShowDuration="100000">
                    <Image.ToolTip>
                        <ToolTip Style="{StaticResource HelpToolTipStyle}"/>
                    </Image.ToolTip>
                </Image>
                <Label FontWeight="Bold" VerticalAlignment="Center">
                    <TextBlock Text="{Binding UserControlTitle, RelativeSource={RelativeSource AncestorType=usercontrols:UserControlBase}}" 
                               TextDecorations="Underline"/>
                </Label>
            </StackPanel>
            <Grid Grid.Row="1">
                <ContentPresenter/>
            </Grid>
        </Grid>
    </ControlTemplate>
    <Style TargetType="usercontrols:UserControlBase" x:Key="LabelledUserControl">
        <Setter Property="Template" Value="{StaticResource UserControlBaseTemplate}"/>
    </Style>-->

    <Style TargetType="{x:Type usercontrols:UserControlBase}" x:Key="LabelledUserControl">
        <Setter Property="Template">
            <Setter.Value>
                <!-- No warning will be given on missing target type, it will just be silent and not work! 
                     Ridiculously annoying! -->
                <ControlTemplate TargetType="{x:Type usercontrols:UserControlBase}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="30"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <StackPanel Grid.Row="0" Orientation="Horizontal">
                            <Image Height="20" Width="20" 
                                   VerticalAlignment="Center"
                                   Source="/WPFDemo.Resources;Component/Images/Help_24.png"
                                   ToolTipService.ShowDuration="100000">
                                <Image.ToolTip>
                                    <ToolTip Style="{StaticResource HelpToolTipStyle}"/>
                                </Image.ToolTip>
                            </Image>
                            <Label FontWeight="Bold" VerticalAlignment="Center">
                                <TextBlock Text="{Binding UserControlTitle, RelativeSource={RelativeSource AncestorType=usercontrols:UserControlBase}}" 
                                           TextDecorations="Underline"/>
                            </Label>
                        </StackPanel>
                        <Grid Grid.Row="1">
                            <ContentPresenter/>
                            <!-- Exactly the same as ContentPresenter, except it will not compile without 
                                 TargetType defined in ControlTemplate above. -->
                            <!--<ContentControl Content="{TemplateBinding Content}"/>-->
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CustomWindowStyle" TargetType="{x:Type windows:CustomWindow}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type windows:CustomWindow}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Margin="20">
                        <Border.Effect>
                            <DropShadowEffect x:Name="DropShadowEffect" Color="Gray" Direction="270" BlurRadius="20" ShadowDepth="3" />
                        </Border.Effect>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="35"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Border Grid.Row="0" 
                                    Name="BdrTitleBar"
                                    SnapsToDevicePixels="True">
                                <Border.Style>
                                    <Style TargetType="Border">
                                        <Setter Property="Background" Value="Blue"/>
                                        <!--<EventSetter Event="MouseMove" Handler="Border_MouseMove"/>-->
                                        <EventSetter Event="MouseDown" Handler="BdrTitleBar_MouseDown"/>
                                    </Style>
                                </Border.Style>
                                <Grid>
                                    <TextBlock>
                                        <TextBlock.Style>
                                            <Style TargetType="{x:Type TextBlock}">
                                                <Setter Property="Foreground" Value="#ffffff"/>
                                                <Setter Property="FontSize" Value="20"/>
                                                <Setter Property="FontWeight" Value="Bold"/>
                                                <Setter Property="FontFamily" Value="Calibri"/>
                                                <Setter Property="VerticalAlignment" Value="Center"/>
                                                <Setter Property="Margin" Value="15,0"/>
                                                <Setter Property="Text" Value="{Binding Path=Title, RelativeSource={RelativeSource AncestorType=windows:CustomWindow}}"/>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                    <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
                                        <Button Name="BtnHide">
                                            <Button.Style>
                                                <Style TargetType="{x:Type Button}">
                                                    <!--<Setter Property="IsEnabled" Value="{Binding IsAllowMinimise, RelativeSource={RelativeSource AncestorType=windows:CustomWindow}}"/>-->
                                                    <Setter Property="Visibility" Value="{Binding IsHideWindowVisible, RelativeSource={RelativeSource AncestorType=windows:CustomWindow}}"/>
                                                    <Setter Property="VerticalAlignment" Value="Center"/>
                                                    <Setter Property="HorizontalAlignment" Value="Right"/>
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="Button">
                                                                <Border x:Name="BrdContainer" Height="35" Width="35">
                                                                    <Image Height="20" Width="20" 
                                                                           VerticalAlignment="Center"
                                                                           Source="/WPFDemo.Resources;Component/Images/Icn_Hide_24x24.png" />
                                                                </Border>
                                                                <ControlTemplate.Triggers>
                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                        <Setter TargetName="BrdContainer" Property="Background" Value="#0084CC"/>
                                                                    </Trigger>
                                                                </ControlTemplate.Triggers>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <EventSetter Event="Click" Handler="BtnHide_Click"/>
                                                </Style>
                                            </Button.Style>
                                        </Button>
                                        <!-- Error -->
                                        <!--<Button Name="BtnMaximiseMinimise">
                                            <Button.Style>
                                                <Style TargetType="{x:Type Button}">
                                                    <Setter Property="VerticalAlignment" Value="Center"/>
                                                    <Setter Property="HorizontalAlignment" Value="Right"/>
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="Button">
                                                                --><!--<Border x:Name="BrdContainer" Height="35" Width="35">
                                                                    <Image x:Name="ImgMinMax"
                                                                           Height="20" Width="20" 
                                                                           VerticalAlignment="Center"
                                                                           Source="/WPFDemo.Resources;Component/Images/Icn_Minimize_24x24.png" />
                                                                </Border>--><!--
                                                                <ControlTemplate.Triggers>
                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                        <Setter Property="Background" Value="#0084CC"/>
                                                                    </Trigger>
                                                                    <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType=windows:CustomWindow}}" Value="Normal">
                                                                        <Setter Property="Template">
                                                                            <Setter.Value>
                                                                                <ControlTemplate TargetType="Button">
                                                                                    <Border x:Name="BrdContainer" Height="35" Width="35">
                                                                                        <Image x:Name="ImgMinMax"
                                                                                               Height="20" Width="20" 
                                                                                               VerticalAlignment="Center"
                                                                                               Source="/WPFDemo.Resources;Component/Images/Icn_Minimize_24x24.png" />
                                                                                    </Border>
                                                                                </ControlTemplate>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </DataTrigger>
                                                                    --><!--<DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType=windows:CustomWindow}}" Value="Minimized">
                                                                        <Setter TargetName="ImgMinMax" Property="Source" Value="/WPFDemo.Resources;Component/Images/Icn_Maximize_24x24.png"/>
                                                                    </DataTrigger>
                                                                    <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType=windows:CustomWindow}}" Value="Maximized">
                                                                        <Setter TargetName="ImgMinMax" Property="Source" Value="/WPFDemo.Resources;Component/Images/Icn_Minimize_24x24.png"/>
                                                                    </DataTrigger>--><!--
                                                                </ControlTemplate.Triggers>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                    --><!--<EventSetter Event="Click" Handler=""/>--><!--
                                                </Style>
                                            </Button.Style>
                                        </Button>-->
                                        <Button Name="BtnClose">
                                            <Button.Style>
                                                <Style TargetType="{x:Type Button}">
                                                    <Setter Property="VerticalAlignment" Value="Center"/>
                                                    <Setter Property="HorizontalAlignment" Value="Right"/>
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="Button">
                                                                <Border x:Name="BrdContainer" Height="35" Width="35">
                                                                    <Image Height="20" Width="20" 
                                                                       VerticalAlignment="Center"
                                                                       Source="/WPFDemo.Resources;Component/Images/Icn_Close_24x24.png" />
                                                                </Border>
                                                                <ControlTemplate.Triggers>
                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                        <Setter TargetName="BrdContainer" Property="Background" Value="#0084CC"/>
                                                                    </Trigger>
                                                                </ControlTemplate.Triggers>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <EventSetter Event="Click" Handler="BtnClose_Click"/>
                                                </Style>
                                            </Button.Style>
                                        </Button>
                                    </StackPanel>
                                </Grid>
                            </Border>

                            <Grid Grid.Row="1" ClipToBounds="True">
                                <ContentPresenter/>
                            </Grid>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ResizeMode" Value="NoResize" />
        <Setter Property="AllowsTransparency" Value="True" />
        <Setter Property="WindowStyle" Value="None" />
        <Setter Property="Background" Value="Transparent" />
    </Style>
</ResourceDictionary>